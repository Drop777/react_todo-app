{"version":3,"sources":["Components/Header/Header.js","Components/Todoitem/Todoitem.js","Components/Todoslist/Todoslist.js","Components/Footer/Footer.js","App.js","index.js"],"names":["Header","_ref","todo","currentIndex","handleChange","handleSubmit","react_default","a","createElement","className","type","placeholder","value","onChange","onKeyUp","event","keyCode","Todoitem","handleCheck","handleRemove","filterField","showActiveTodos","showCompletedTodos","classNames","completed","id","checked","htmlFor","todoTitle","onClick","Todolist","filteredTodosList","toggleCompleted","style","display","map","Components_Todoitem_Todoitem","key","Footer","showAllTodos","deleteAllCompleted","concat","filter","length","href","selected","some","App","state","todosList","target","_this","setState","todoItem","prevState","_objectSpread","Object","toConsumableArray","_ref2","_ref3","_this$state","this","Components_Header_Header","Todoslist","Components_Footer_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c538f75f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({\n  todo,\n  currentIndex,\n  handleChange,\n  handleSubmit,\n}) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <input\n      type=\"text\"\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n      value={todo}\n      onChange={handleChange}\n      onKeyUp={(event) => {\n        if (event.keyCode === 13) {\n          handleSubmit(todo, currentIndex);\n        }\n      }}\n    />\n  </header>\n);\n\nHeader.propTypes = {\n  todo: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n}.isRequaired;\n\nexport default Header;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Todoitem = ({\n  todo,\n  handleCheck,\n  handleRemove,\n  filterField,\n  showActiveTodos,\n  showCompletedTodos,\n}) => (\n  <li className={classNames({ completed: todo.completed })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        checked={todo.completed}\n        onChange={event => handleCheck(\n          event, todo, filterField, showActiveTodos, showCompletedTodos\n        )}\n      />\n      <label htmlFor={todo.id}>{todo.todoTitle}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => handleRemove(todo)}\n      />\n    </div>\n  </li>\n);\n\nTodoitem.propTypes = {\n  todo: PropTypes.string,\n  handleCheck: PropTypes.func,\n  handleRemove: PropTypes.func,\n}.isRequaired;\n\nexport default Todoitem;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todoitem from '../Todoitem/Todoitem';\n\nconst Todolist = ({\n  filteredTodosList,\n  handleCheck,\n  handleRemove,\n  toggleCompleted,\n  filterField,\n  showActiveTodos,\n  showCompletedTodos,\n}) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={event => toggleCompleted(event)}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {filteredTodosList\n        // eslint-disable-next-line max-len\n        .map(todo => <Todoitem key={todo.id} todo={todo} handleCheck={handleCheck} handleRemove={handleRemove} filterField={filterField} showActiveTodos={showActiveTodos} showCompletedTodos={showCompletedTodos} />)}\n    </ul>\n  </section>\n);\n\nTodolist.propTypes = {\n  filteredTodosList: PropTypes.arrayOf(PropTypes.shape({\n    todoTitle: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  })),\n  handleCheck: PropTypes.func,\n  handleRemove: PropTypes.func,\n  toggleCompleted: PropTypes.func,\n}.isRequaired;\n\nexport default Todolist;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  filteredTodosList,\n  filterField,\n  showActiveTodos,\n  showAllTodos,\n  showCompletedTodos,\n  deleteAllCompleted,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {`${filteredTodosList.filter(todo => todo.completed === false)\n        .length} `}\n        items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({ selected: filterField === 'all' })}\n          onClick={showAllTodos}\n        >\n        All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames({ selected: filterField === 'active' })}\n          onClick={showActiveTodos}\n        >\n        Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({ selected: filterField === 'completed' })}\n          onClick={showCompletedTodos}\n        >\n        Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={{\n        display: filteredTodosList.some(todo => todo.completed === true)\n          ? 'block'\n          : 'none',\n      }}\n      onClick={deleteAllCompleted}\n    >\n    Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  filteredTodosList: PropTypes.arrayOf(PropTypes.shape({\n    todoTitle: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  })),\n  filterField: PropTypes.string,\n  showActiveTodos: PropTypes.func,\n  showAllTodos: PropTypes.func,\n  showCompletedTodos: PropTypes.func,\n  deleteAllCompleted: PropTypes.func,\n}.isRequaired;\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Components/Header/Header';\nimport Todoslist from './Components/Todoslist/Todoslist';\nimport Footer from './Components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todo: '',\n    currentIndex: 0,\n    todosList: [],\n    filteredTodosList: [],\n    filterField: 'all',\n  };\n\n  handleChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      todo: value,\n    });\n  }\n\n  handleSubmit = (todo, currentIndex) => {\n    if (todo) {\n      const todoItem = {\n        todoTitle: todo,\n        id: currentIndex,\n        completed: false,\n      };\n\n      this.setState(prevState => ({\n        ...prevState,\n        todo: '',\n        currentIndex: prevState.currentIndex + 1,\n        todosList: [...prevState.todosList, todoItem],\n        filteredTodosList: [...prevState.todosList, todoItem],\n      }));\n    }\n  };\n\n  handleCheck = (\n    { target }, todoItem, filterField, showActiveTodos, showCompletedTodos\n  ) => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.map((todo) => {\n        if (todo.id === todoItem.id) {\n          return { ...todo, completed: target.checked };\n        }\n\n        return todo;\n      }),\n      filteredTodosList: prevState.filteredTodosList.map((todo) => {\n        if (todo.id === todoItem.id) {\n          return { ...todo, completed: target.checked };\n        }\n\n        return todo;\n      }),\n    }));\n\n    if (filterField === 'active') {\n      showActiveTodos();\n    } else if (filterField === 'completed') {\n      showCompletedTodos();\n    }\n  }\n\n  handleRemove = (todoItem) => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.filter((todo) => {\n        if (todo.id === todoItem.id) {\n          return false;\n        }\n\n        return true;\n      }),\n      filteredTodosList: prevState.todosList.filter((todo) => {\n        if (todo.id === todoItem.id) {\n          return false;\n        }\n\n        return true;\n      }),\n    }));\n  }\n\n  showAllTodos = () => {\n    this.setState(prevState => ({\n      filteredTodosList: prevState.todosList,\n      filterField: 'all',\n    }));\n  }\n\n  showActiveTodos = () => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.todosList.filter(todo => todo.completed === false),\n      filterField: 'active',\n    }));\n  }\n\n  showCompletedTodos = () => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.todosList.filter(todo => todo.completed === true),\n      filterField: 'completed',\n    }));\n  }\n\n  toggleCompleted = ({ target }) => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.filteredTodosList\n          .map(todo => ({ ...todo, completed: target.checked })),\n      todosList:\n        prevState.todosList\n          .map(todo => ({ ...todo, completed: target.checked })),\n    }));\n  }\n\n  deleteAllCompleted = () => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.todosList.filter(todo => todo.completed === false),\n      todosList: prevState.todosList.filter(todo => todo.completed === false),\n    }));\n  }\n\n  render() {\n    const {\n      todosList, todo, filteredTodosList, filterField, currentIndex,\n    } = this.state;\n\n    if (todosList.length < 1) {\n      return (\n        <section className=\"todoapp\">\n          <Header\n            todo={todo}\n            currentIndex={currentIndex}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        </section>\n      );\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          todo={todo}\n          currentIndex={currentIndex}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        <Todoslist\n          filteredTodosList={filteredTodosList}\n          handleCheck={this.handleCheck}\n          handleRemove={this.handleRemove}\n          toggleCompleted={this.toggleCompleted}\n          showActiveTodos={this.showActiveTodos}\n          showCompletedTodos={this.showCompletedTodos}\n          filterField={filterField}\n        />\n        <Footer\n          filteredTodosList={filteredTodosList}\n          filterField={filterField}\n          showActiveTodos={this.showActiveTodos}\n          showAllTodos={this.showAllTodos}\n          showCompletedTodos={this.showCompletedTodos}\n          deleteAllCompleted={this.deleteAllCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}