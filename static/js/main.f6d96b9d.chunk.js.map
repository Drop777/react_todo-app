{"version":3,"sources":["Components/Header/Header.js","Components/Todoitem/Todoitem.js","Components/Todoslist/Todoslist.js","Components/Footer/Footer.js","App.js","index.js"],"names":["Header","props","todo","handleChange","handleSubmit","react_default","a","createElement","className","type","placeholder","value","onChange","onKeyUp","event","keyCode","Todoitem","handleCheck","handleDestroy","classNames","completed","id","checked","htmlFor","todoTitle","onClick","Todolist","filteredTodosList","toggleCompleted","style","display","map","Components_Todoitem_Todoitem","key","Footer","filterState","showActiveTodos","showAllTodos","showCompletedTodos","deleteAllCompleted","concat","filter","length","href","selected","some","App","state","todosList","_ref","target","_this","setState","todoItem","prevState","_objectSpread","Object","toConsumableArray","_ref2","_ref3","_this$state","this","Components_Header_Header","Todoslist","Components_Footer_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f6d96b9d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n  const {\n    todo,\n    handleChange,\n    handleSubmit,\n  } = props;\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todo}\n        onChange={handleChange}\n        onKeyUp={(event) => {\n          if (event.keyCode === 13) {\n            handleSubmit(todo);\n          }\n        }}\n      />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  todo: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n}.isRequaired;\n\nexport default Header;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Todoitem = (props) => {\n  const {\n    todo,\n    handleCheck,\n    handleDestroy,\n  } = props;\n\n  return (\n    <li className={classNames({ completed: todo.completed })}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"todo-1\"\n          checked={todo.completed}\n          onChange={event => handleCheck(event, todo)}\n        />\n        <label htmlFor=\"todo-1\">{todo.todoTitle}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handleDestroy(todo)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoitem.propTypes = {\n  todo: PropTypes.string,\n  handleCheck: PropTypes.func,\n  handleDestroy: PropTypes.func,\n}.isRequaired;\n\nexport default Todoitem;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todoitem from '../Todoitem/Todoitem';\n\nconst Todolist = (props) => {\n  const {\n    filteredTodosList,\n    handleCheck,\n    handleDestroy,\n    toggleCompleted,\n  } = props;\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={event => toggleCompleted(event)}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n        {filteredTodosList\n          // eslint-disable-next-line max-len\n          .map(todo => <Todoitem key={todo.id} todo={todo} handleCheck={handleCheck} handleDestroy={handleDestroy} />)}\n      </ul>\n    </section>\n  );\n};\n\nTodolist.propTypes = {\n  filteredTodosList: PropTypes.arrayOf(PropTypes.object),\n  handleCheck: PropTypes.func,\n  handleDestroy: PropTypes.func,\n  toggleCompleted: PropTypes.func,\n}.isRequaired;\n\nexport default Todolist;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const {\n    filteredTodosList,\n    filterState,\n    showActiveTodos,\n    showAllTodos,\n    showCompletedTodos,\n    deleteAllCompleted,\n  } = props;\n\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {`${filteredTodosList.filter(todo => todo.completed === false)\n          .length} `}\n          items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={classNames({ selected: filterState === 'all' })}\n            onClick={showAllTodos}\n          >\n          All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={classNames({ selected: filterState === 'active' })}\n            onClick={showActiveTodos}\n          >\n          Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={classNames({ selected: filterState === 'completed' })}\n            onClick={showCompletedTodos}\n          >\n          Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{\n          display: filteredTodosList.some(todo => todo.completed === true)\n            ? 'block'\n            : 'none',\n        }}\n        onClick={deleteAllCompleted}\n      >\n      Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  filteredTodosList: PropTypes.arrayOf(PropTypes.object),\n  filterState: PropTypes.string,\n  showActiveTodos: PropTypes.func,\n  showAllTodos: PropTypes.func,\n  showCompletedTodos: PropTypes.func,\n  deleteAllCompleted: PropTypes.func,\n}.isRequaired;\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Components/Header/Header';\nimport Todoslist from './Components/Todoslist/Todoslist';\nimport Footer from './Components/Footer/Footer';\n\nlet id = 0;\n\nclass App extends React.Component {\n  state = {\n    todo: '',\n    todosList: [],\n    filteredTodosList: [],\n    filterState: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      todo: value,\n    });\n  }\n\n  handleSubmit = (todo) => {\n    if (todo) {\n      const todoItem = {\n        todoTitle: todo,\n        id,\n        completed: false,\n      };\n\n      id += 1;\n\n      this.setState(prevState => ({\n        ...prevState,\n        todo: '',\n        todosList: [...prevState.todosList, todoItem],\n        filteredTodosList: [...prevState.todosList, todoItem],\n      }));\n    }\n  };\n\n  handleCheck = ({ target }, todoItem) => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.map((todo) => {\n        if (todo.id === todoItem.id) {\n          return { ...todo, completed: target.checked };\n        }\n\n        return todo;\n      }),\n      filteredTodosList: prevState.filteredTodosList.map((todo) => {\n        if (todo.id === todoItem.id) {\n          return { ...todo, completed: target.checked };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  handleDestroy = (todoItem) => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.filter((todo) => {\n        if (todo.id === todoItem.id) {\n          return false;\n        }\n\n        return todo;\n      }),\n      filteredTodosList: prevState.todosList.filter((todo) => {\n        if (todo.id === todoItem.id) {\n          return false;\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  showAllTodos = () => {\n    this.setState(prevState => ({\n      filteredTodosList: prevState.todosList,\n      filterState: 'all',\n    }));\n  }\n\n  showActiveTodos = () => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.todosList.filter(todo => todo.completed === false),\n      filterState: 'active',\n    }));\n  }\n\n  showCompletedTodos = () => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.todosList.filter(todo => todo.completed === true),\n      filterState: 'completed',\n    }));\n  }\n\n  toggleCompleted = ({ target }) => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.filteredTodosList\n          .map(todo => ({ ...todo, completed: target.checked })),\n      todosList:\n        prevState.todosList\n          .map(todo => ({ ...todo, completed: target.checked })),\n    }));\n  }\n\n  deleteAllCompleted = () => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.todosList.filter(todo => todo.completed === false),\n      todosList: prevState.todosList.filter(todo => todo.completed === false),\n    }));\n  }\n\n  render() {\n    const {\n      todosList,\n      todo,\n      filteredTodosList,\n      filterState,\n    } = this.state;\n\n    return (\n\n      <section className=\"todoapp\">\n        <Header\n          todo={todo}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        <Todoslist\n          todosList={todosList}\n          filteredTodosList={filteredTodosList}\n          handleCheck={this.handleCheck}\n          handleDestroy={this.handleDestroy}\n          toggleCompleted={this.toggleCompleted}\n        />\n        <Footer\n          filteredTodosList={filteredTodosList}\n          filterState={filterState}\n          showActiveTodos={this.showActiveTodos}\n          showAllTodos={this.showAllTodos}\n          showCompletedTodos={this.showCompletedTodos}\n          deleteAllCompleted={this.deleteAllCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}